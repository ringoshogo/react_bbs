{"version":3,"sources":["components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Toolbar/Toolbar.module.css","containers/MyPage/MyPage.module.css","containers/Posts/Post.module.css","common/cryptoConst.js","components/UI/Button/Button.module.css","components/Logo/Logo.module.css","components/Navigation/DrawToggle/DrawToggle.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Modal/BackDrop/BackDrop.module.css","hoc/Layout/Layout.module.css","components/UI/Modal/Modal.module.css","containers/NewPost/NewPost.module.css","containers/Auth/Auth.module.css","containers/PostDetails/ResponseForm/ResponseForm.module.css","containers/PostDetails/Chart/Chart.module.css","containers/PostDetails/PostDetails.module.css","axios-post.js","store/actions/actionTypes.js","common/crypto.js","store/actions/posts.js","store/actions/auth.js","hoc/Auxirialy.js","assets/images/119959.jpg","components/Logo/Logo.js","components/Navigation/DrawToggle/DrawToggle.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/UI/Input/Input.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Modal/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/UI/Button/Button.js","common/utility.js","common/authConst.js","components/UI/Modal/Modal.js","containers/MyPage/MyPage.js","containers/NewPost/NewPost.js","containers/Posts/Posts.js","components/UI/Spinner/Spinner.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","common/formConst.js","containers/PostDetails/ResponseForm/ReponseForm.js","containers/PostDetails/ResponseDetails/ResponseDetails.js","containers/PostDetails/Chart/Chart.js","containers/PostDetails/PostDetails.js","App.js","reportWebVitals.js","store/reducers/posts.js","store/reducers/auth.js","index.js","containers/PostDetails/ResponseDetails/ResponseDetails.module.css","components/UI/Input/Input.module.css"],"names":["module","exports","ALGORITHM","KEY","Buffer","from","encode","data","iv","crypto","randomBytes","cipher","createCipheriv","encData","update","concat","final","toString","decode","buff","slice","decipher","createDecipheriv","decData","instance","axios","create","baseURL","process","FETCH_SUCCESS","FETCH_DETAILS_SUCCESS","ADD_POST_SUCCESS","FETCH_GRAPH_DATA_SUCCESS","ADD_RESPONSE","ADD_GOOD_CLICK_SUCCESS","ADD_SEARCH_QUERY","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_ERROR_REST","PROFILE_UPDATE_SUCCESS","AUTH_CREATE_SUCCESS","AUTH_CREATE_SUCCESS_END","setLocalStorage","key","localStorage","setItem","String","getLocalStorage","getItem","undefined","addGoodClick","response","postIndex","responseIndex","userId","dispatch","post","user","headers","then","res","goodclickuser","type","actionTypes","addGoodClickSuccess","catch","err","addPost","form","FormData","append","image","describe","title","console","log","addPostSuccess","fetchPost","query","url","dispath","get","posts","callAxiosFetchPostDetails","postid","index","fetchDetailSuccess","callAxiosFetchGraphData","fetchGraphDataSuccess","graphData","auth","userInfo","isSignup","postObj","error","username","email","password","profile","sex","value","birthday","avator","res1","alert","token","pk","authSuccess","age","authFail","profileUpdate","content","patch","Aux","props","children","logo","className","classes","Logo","style","height","src","logoImg","alt","drawToggle","DrawToggle","onClick","clicked","navigationItem","NavigationItem","to","link","exact","excat","activeClassName","active","input","inputElem","inputClasses","InputElement","shouldValidate","touched","invalid","push","Invalid","validation","isNumeric","Number","elementConfig","boxSizeMiddle","SelectMiddle","elementType","join","onChange","changed","selectConfig","options","map","option","displayValue","StarRatingEvaluate","val","target","LabelElement","Input","Label","label","NavigationItems","useState","text","setText","placeholder","event","trim","pathname","extraProps","addSearchQuery","isAuthenticate","toolbar","Toolbar","drawToggleClicked","DesktopOnly","backdrop","show","BackDrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","button","disabled","Button","btnType","checkValidity","rules","isValid","required","minLength","length","maxLength","isEmail","test","sexList","getSex","valList","getValFromList","ageList","Array","_","i","Date","getFullYear","Modal","transform","opacity","MyPage","writable","changeable","modalShow","profileChangeHandler","id","updateFormValue","profileTypeSwitchHandler","profileSubmitHandler","modalSubmitHandler","profileArray","passCofirm","PassConfirm","profiles","textAlign","actions","newPost","postForm","valid","acceptedFiles","filesLimit","showPreviews","images","inputChangeHandler","postFormId","newValue","newState","onSubmitHandler","result","onAddPost","postArr","contents","e","NewPost","useEffect","Contents","Posts","PostsNotice","spinner","Loader","Auth","formElement","name","onlySignUp","password2","birhday","isSignUp","formName","updateObject","elem","created","authCreateSuccessEnd","authErrorReset","authRedirect","redirectPath","errorMessage","color","authArr","config","loading","authRedirectPath","Logout","onLogout","removeItem","expiredDateSelectList","getExpiredDateFromSelectVal","ResponseForm","expiredDays","formConst","taste","size","isHalf","appearance","condition","comment","inputElements","setinputElements","iptElmArr","inputIdentifier","replace","fromCharCode","charCodeAt","newElement","onChangeHandler","newRes","submitted","newIptElm","modalClosed","ResponseDetails","starConvert","count","keys","width","viewBox","xmlns","data-stars","fill","points","pointerEvents","offset","stopColor","dt","Response","Profile","userResponse","created_at","getMonth","getDate","Evaluates","expire_date","Evaluate","Other","OtherElem","goodClickUser","onClickGood","cursor","CustomToolTip","payload","renderLineChart","ResponsiveContainer","BarChart","margin","top","right","bottom","left","barSize","CartesianGrid","stroke","strokeDasharray","XAxis","dataKey","unit","YAxis","ticks","tickCount","Tooltip","Legend","Brush","endIndex","Bar","ImageComponent","img","borderRadius","PostDetails","postId","match","params","onAddResHandler","responseInfo","onAddNewRes","location","fetchGraphData","prevProps","filter","postRedirect","foodImage","foodDescribe","currentRes","onAddGodClk","food_image","PostDetailsCommon","Header","PostDetailsHeader","PostDetailsTitle","PostDetailsDescribe","PostDetailsSummary","PostDetailsSummaryPraph","PostHeader","PlusIcon","PostLabel","postContents","userid","expire_type","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","newArr","fetchSuccess","updatedPost","addNewResponse","resId","reducer","authStart","authCreateSuccess","authLogout","userName","profileUpdateSuccess","rootReducer","combineReducers","postsReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b5c4209.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__wCLsq\",\"Open\":\"SideDrawer_Open__3fKVE\",\"Close\":\"SideDrawer_Close__3J7Dm\",\"Logo\":\"SideDrawer_Logo__1F7F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1jF2Z\",\"Logo\":\"Toolbar_Logo__UpObr\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1kM4M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPage\":\"MyPage_MyPage__mJVkU\",\"MyPageButton\":\"MyPage_MyPageButton__2D8bV\",\"InputElement\":\"MyPage_InputElement__n4Kqg\",\"PassConfirm\":\"MyPage_PassConfirm__1CbpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Post_Posts__2GlEK\",\"active\":\"Post_active__1jhKx\",\"PostsNotice\":\"Post_PostsNotice__1brGg\",\"Contents\":\"Post_Contents__2WXh5\"};","import crypto from 'crypto';\r\n\r\nconst ALGORITHM = 'aes-256-cbc';\r\nconst KEY = Buffer.from([\r\n    0x2F, 0x6C, 0xC7, 0x36, 0x60, 0xB0, 0x36, 0x20,\r\n    0x43, 0xD4, 0x69, 0x2E, 0xD0, 0x44, 0x85, 0x84,\r\n    0x1C, 0x1A, 0x69, 0xC4, 0xB8, 0x7B, 0x52, 0x2D,\r\n    0x62, 0xF5, 0x64, 0x06, 0xA1, 0xD4, 0x34, 0xEE\r\n]); // 全ビット１の256bit値を鍵とする\r\n\r\nexport const encode = data => {    \r\n    // 16byteのランダム値を生成する\r\n    const iv = crypto.randomBytes(16);\r\n\r\n    // 暗号器作成\r\n    const cipher = crypto.createCipheriv(ALGORITHM, KEY, iv);\r\n\r\n    // dataをバイナリにして暗号化\r\n    const encData = cipher.update(Buffer.from(data));\r\n\r\n    // 末端処理 & 先頭にivを付与し、バイナリにbase64(文字列)にして返す\r\n    return Buffer.concat([iv, encData, cipher.final()]).toString('base64');\r\n\r\n}\r\n\r\nexport const decode = data => {\r\n    // 受け取った暗号化文字列をバイナリに変換\r\n    const buff = Buffer.from(data, 'base64');\r\n\r\n    // iv値である、先頭16byteを取り出す\r\n    const iv = buff.slice(0, 16);\r\n\r\n    // iv値以降の、暗号化データを取り出す\r\n    const encData = buff.slice(16);\r\n\r\n    // 復号器作成\r\n    const decipher = crypto.createDecipheriv(ALGORITHM, KEY, iv);\r\n\r\n    // 暗号化データを復号化\r\n    const decData = decipher.update(encData);\r\n\r\n    // 末端処理 ＆ バイナリを文字列に戻す\r\n    return Buffer.concat([decData, decipher.final()]).toString('utf8');\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__lIBCV\",\"Success\":\"Button_Success__lR_kU\",\"Danger\":\"Button_Danger__292wF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1qrw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawToggle\":\"DrawToggle_DrawToggle__rHygD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3Ca20\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__J9gVy\",\"active\":\"NavigationItem_active__ejgwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__FzR_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3kNGM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2QtCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPost\":\"NewPost_NewPost__3f-y4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__hVJ9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResponseForm\":\"ResponseForm_ResponseForm__2_FL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomToolTip\":\"Chart_CustomToolTip__247_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"PostDetails_Header__2kzTc\",\"PostDetailsCommon\":\"PostDetails_PostDetailsCommon__1T4uE\",\"PostDetails\":\"PostDetails_PostDetails__2b8g3\",\"PostDetailsHeader\":\"PostDetails_PostDetailsHeader__3wWA1\",\"PostDetailsTitle\":\"PostDetails_PostDetailsTitle__3ibL7\",\"PostDetailsDescribe\":\"PostDetails_PostDetailsDescribe__1mkjF\",\"PostDetailsSummary\":\"PostDetails_PostDetailsSummary__M70wg\",\"PostDetailsSummaryPraph\":\"PostDetails_PostDetailsSummaryPraph__2U7Tt\",\"Response\":\"PostDetails_Response__dZziM\",\"PostHeader\":\"PostDetails_PostHeader__3amrG\",\"NewPost\":\"PostDetails_NewPost__3WjJZ\",\"PlusIcon\":\"PostDetails_PlusIcon__2oNhz\"};","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_AXIOS_BASE_URL\n});\n\nexport default instance;","export const FETCH_POSTS = \"FETCH_POSTS\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_DETAILS_SUCCESS = \"FETCH_DETAILS_SUCCESS\";\nexport const ADD_POST_SUCCESS = \"ADD_POST\"; \nexport const FETCH_GRAPH_DATA_SUCCESS = \"FETCH_GRAPH_DATA_SUCCESS\";\n\nexport const ADD_RESPONSE = \"ADD_RESPONSE\";\nexport const ADD_GOOD_CLICK = \"ADD_GOOD_CLICK\";\nexport const ADD_GOOD_CLICK_SUCCESS = \"ADD_GOOD_CLICK_SUCCESS\";\nexport const ADD_SEARCH_QUERY = \"ADD_SEARCH_QUERY\";\n\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const AUTH_ERROR_REST = \"AUTH_ERROR_REST\";\n\nexport const PROFILE_UPDATE_SUCCESS = \"PROFILE_UPDATE_SUCCESS\";\nexport const AUTH_CREATE_SUCCESS = \"AUTH_CREATE_SUCCESS\";\nexport const AUTH_CREATE_SUCCESS_END = \"AUTH_CREATE_SUCCESS_END\";\n","import {encode, decode} from './cryptoConst';\n\nexport const setLocalStorage = (key, data) => {\n    localStorage.setItem(key, encode(String(data)));\n}\n\nexport const getLocalStorage = (key) => {\n    const data = localStorage.getItem(key);\n    return data===null || data===undefined ? null : decode(localStorage.getItem(key));\n}","import axios from '../../axios-post';\nimport * as actionTypes from './actionTypes';\nimport {getLocalStorage} from '../../common/crypto';\n\nexport const addSearchQuery = (query) => {\n    return {\n        type: actionTypes.ADD_SEARCH_QUERY,\n        query: query\n    }\n}\n\n\nconst addPostSuccess = (post) => {\n    return {\n        type: actionTypes.ADD_POST_SUCCESS,\n        post: post\n    }\n}\n\nexport const fetchSuccess = (posts) => {\n    return {\n        type: actionTypes.FETCH_SUCCESS,\n        posts: posts\n    }\n}\n\nexport const fetchDetailSuccess = (post, index) => {\n    return {\n        type: actionTypes.FETCH_DETAILS_SUCCESS,\n        post: post,\n        index, index,\n    }\n}\n\nexport const addNewResponse = (userResponse, postId) => {\n    return {\n        type: actionTypes.ADD_RESPONSE,\n        userResponse: userResponse,\n        postId: postId,\n    }\n}\n\nexport const addGoodClickSuccess = (goodclickuser, postIndex ,responseIndex) =>{\n    return {\n        type: actionTypes.ADD_GOOD_CLICK_SUCCESS,\n        postIndex: postIndex,\n        responseIndex: responseIndex,\n        goodclickuser: goodclickuser,\n\n    }\n}\n\n/**\n * イイネボタンを追加する\n * @param {}} response \n * @param {*} postIndex \n * @param {*} responseIndex \n */\nexport const addGoodClick = (response, postIndex, responseIndex) => {\n    const userId = getLocalStorage(\"userId\");\n\n    return dispatch => {\n        axios.post(\"/goodclickuser/\",{\n            response: response,\n            user: userId\n        },  {\n            headers: {\n                'Authorization': `Token ${getLocalStorage(\"token\")}`,\n            }\n        })\n        .then(res => {\n            dispatch(addGoodClickSuccess(res.data, postIndex, responseIndex));\n        })\n        .catch(err => {\n\n        })\n\n\n    }\n}\n\n/**\n * ポストを追加する\n * @param {}} query \n */\nexport const addPost = (post) => {\n    // 現状、ファイルのアップロードにはフォームデータとするのが必要のよう\n    const form = new FormData();\n    form.append(\"food_image\", post.image[0]);\n    form.append(\"describe\", post.describe);\n    form.append(\"title\", post.title);\n    console.log(form);\n\n    return dispatch => {\n        axios.post(\"/posts/\", form ,{headers: {\n            'content-type': 'multipart/form-data',\n        }})\n        .then(res => {\n            console.log(res.data);\n            dispatch(addPostSuccess(res.data));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n}\n\n/**\n * ポストを取得する\n */\nexport const fetchPost = (query) => {\n    \n    let url = \"/posts/\";\n    if(query) {\n        url = \"/posts/?query=\"+query;\n    }\n    return dispath => {\n        axios.get(url)\n        .then(res => {\n                dispath(fetchSuccess(res.data));\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}\n\n/**\n * 個別のポストを取得する\n * @param {}} postid \n */\nexport const fetchPostDetails =(postid, index) => {\n\n    return dispatch => {\n        callAxiosFetchPostDetails(dispatch, postid, index);\n    }\n}\n\n/**\n * 個別のポストを取得する\n * @param {}} postid \n */\nconst callAxiosFetchPostDetails = (dispatch, postid, index) => {\n    const url = \"/posts/\" + postid + \"/\";\n    axios.get(url)\n        .then(res => {\n            console.log(res.data);\n            dispatch(fetchDetailSuccess(res.data, index));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n}\n\n/**\n * ポストに対するレスポンスを追加する\n */\nexport const addResponse = (responseInfo, postid, postIndex) => {\n    const postContents = {\n        sex: getLocalStorage(\"sex\"),\n        age: (new Date().getFullYear() - getLocalStorage(\"birthday\")),\n        userid: getLocalStorage(\"userId\"),\n        post: postid,\n        appearance: responseInfo.appearance,\n        taste: responseInfo.taste,\n        condition: responseInfo.condition,\n        expire_date: responseInfo.expiredDays,\n        expire_type: 1,\n        comment: responseInfo.comment,};\n\n    console.log(postContents);\n\n    return dispatch => {\n        axios.post(\"/response/\", postContents,  {\n            headers: {\n                'Authorization': `Token ${getLocalStorage(\"token\")}`,\n            }\n        })\n        .then(res => {\n            callAxiosFetchGraphData(dispatch, postid);\n            callAxiosFetchPostDetails(dispatch, postid, postIndex);\n        })\n        .catch(err => console.log(err))\n    }\n}\n\n/**\n * ポストに対するレスポンスのサマリを取得する\n * {\n *  x: \"日数\", y: \"評価の平均\", x: \"評価数\"\n * }\n */\nexport const fetchGraphData = (postid) => {\n    \n    return dispatch => {\n        callAxiosFetchGraphData(dispatch, postid);\n    }\n}\n\n/**\n * axios でデータを取得する\n * @param {*} dispatch \n * @param {*} postid \n */\nconst callAxiosFetchGraphData = (dispatch, postid) => {\n    \n    axios.get(\"/posts/\" + postid + \"/graph_data/\")\n    .then(res => {\n            dispatch(fetchGraphDataSuccess(res.data));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n}\n\n\nexport const fetchGraphDataSuccess = (data) => {\n    return {\n        type: actionTypes.FETCH_GRAPH_DATA_SUCCESS,\n        graphData: data,\n    }\n}\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-post';\nimport {getLocalStorage, setLocalStorage} from '../../common/crypto';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    };\n};\n\nexport const authSuccess = (token, userInfo, isSignup) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        userInfo: userInfo,\n        token: token,\n        isSignup: isSignup,\n    };\n};\n\nconst authCreateSuccess = () =>{\n    return {\n        type: actionTypes.AUTH_CREATE_SUCCESS\n    }\n};\nexport const authCreateSuccessEnd = () =>{\n    return {\n        type: actionTypes.AUTH_CREATE_SUCCESS_END\n    }\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    };\n};\n\nexport const authErrorReset = () => {\n    return {\n        type: actionTypes.AUTH_ERROR_REST,\n    }\n}\n\nexport const logout = () => {\n\n    // ログアウト機能も実装する\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"sex\");\n    localStorage.removeItem(\"age\");\n    localStorage.removeItem(\"birthday\");\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\n/**\n * 認証情報 ＋ ユーザ情報を取得する。\n * @param {}} userInfo \n * @param {*} isSignup \n */\nexport const auth = (userInfo, isSignup)=> {\n\n    let postObj = null;\n    let url = null;\n    let error = null;\n    // 新規登録\n    if (isSignup) {\n        url = '/users/';\n        postObj = {\n            username: userInfo.username,\n            email: userInfo.email,\n            password: userInfo.password,\n            profile: {\n                sex: userInfo.sex.value,\n                birthday: userInfo.birthday,\n                avator: null,\n            }\n        };\n        error = \"新規登録に失敗しました。\"\n    // ログイン\n    }else {\n        url = '/rest-auth/login/';\n        postObj = {\n            email: userInfo.email,\n            password: userInfo.password,\n        };\n        error = \"ログインに失敗しました。\"\n    }\n\n    return dispatch => {\n\n        // 認証トークンを取得\n        axios.post(url, postObj)\n        .then(res1 => {\n\n            if (isSignup) {\n                alert(\"新規ユーザ登録が正常に終了しました。\");\n                dispatch(authCreateSuccess());\n\n            }else {\n                // ユーザーIDを取得\n                const token = res1.data.key;\n                setLocalStorage(\"token\", token);\n                axios.get('/rest-auth/user/', {\n                    headers: {\n                        'Authorization': `Token ${token}`,\n                    }\n                })\n                .then(res => {\n                    userInfo.userId = res.data.pk;\n                    userInfo.username = res.data.username;\n                    dispatch(authSuccess(token, userInfo, isSignup));\n                    setLocalStorage(\"userId\", userInfo.userId);\n                    setLocalStorage(\"username\", userInfo.username);\n                    setLocalStorage(\"email\", userInfo.email);\n                    setLocalStorage(\"sex\", userInfo.sex.value);\n                    setLocalStorage(\"age\", userInfo.age);\n                    setLocalStorage(\"birthday\", userInfo.birthday);\n                })\n                .catch(err => {\n                    console.log(\"ユーザ情報取得でエラーが発生しました。\")\n                })\n\n            }\n        })\n        .catch(err =>{\n            console.log(err);\n            dispatch(authFail(error));\n        })\n\n    }\n};\n\nconst profileUpdateSuccess = (userInfo) => {\n    return {\n        type: actionTypes.PROFILE_UPDATE_SUCCESS,\n        userInfo: userInfo,\n    }\n}\n\n/**\n * プロフィールの部分更新\n * @param {*} username \n * @param {*} email \n * @param {*} password \n */\nexport const profileUpdate = (username, email, password) => {\n    const content = {username: username, email: email, password: password, profile: {birthday: 1990}}\n\n    return dispatch => {\n        axios.patch(\"/users/\" + getLocalStorage(\"userId\") + \"/\", content,{\n                headers: {\n                    'Authorization': `Token ${getLocalStorage(\"token\")}`,\n                }\n            })\n            .then(res => {\n                dispatch(profileUpdateSuccess(res.data))\n                setLocalStorage(\"username\", res.data.username);\n                setLocalStorage(\"email\", res.data.email);\n            })\n            .catch(err => console.log(err))\n    }\n}\n\n// const logIn = async(dispatch) => {\n//     dispatch(authStart());\n//     await axios.post(url, postObj)\n//     .then(res => {\n//         getUserInfo(res.data.key, userInfo);\n//     })\n//     .catch(err =>{\n//         dispatch(authFail(error));\n//     })\n\n//     dispatch(authSuccess(res.data.key, userInfo, isSignup));\n// }","const Aux = props => props.children;\n\nexport default Aux;","export default __webpack_public_path__ + \"static/media/119959.53d9a35f.jpg\";","import React from 'react';\n\nimport classes from './Logo.module.css';\nimport logoImg from '../../assets/images/119959.jpg';\n\nconst logo = props => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={logoImg} alt=\"食べても大丈夫？\"/>\n    </div>\n)\n\nexport default logo;","import React from 'react';\n\nimport classes from './DrawToggle.module.css';\n\nconst drawToggle = props => (\n    <div className={classes.DrawToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawToggle;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = props => (\n    <li className={classes.NavigationItem}>\n        <NavLink\n            onClick={props.clicked}\n            to={props.link}\n            exact={props.excat}\n            activeClassName={props.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\nimport ReactStarsRating from 'react-awesome-stars-rating';\nimport {DropzoneArea} from 'material-ui-dropzone';\n\nimport classes from './Input.module.css';\n\nconst input = props => {\n    let inputElem = null;\n    const inputClasses = [classes.InputElement];\n\n    // 入力内容が正しくない場合\n    if (props.shouldValidate && props.touched && !props.invalid) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    // 数字を入力する場合\n    if (props.validation && props.validation.isNumeric) {\n        inputClasses.push(classes.Number);\n    }\n\n    // セレクトボックスの大きさを変更する場合\n    if (props.elementConfig && props.elementConfig.boxSizeMiddle){ \n        inputClasses.push(classes.SelectMiddle);\n    }\n\n\n    switch(props.elementType) {\n        case ('input'):\n            inputElem = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('textarea'):\n            inputElem = <textarea\n                className={inputClasses.join(' ')}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ('select'):\n            inputElem = <select\n                className={inputClasses.join(' ')}\n                {...props.elementConfig.selectConfig}\n                value={props.value}\n                onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>;\n            break;\n        case ('starrating'):\n            inputElem = <div className={inputClasses.join(' ')}>\n                    <div className={classes.StarRatingEvaluate}>\n                        <h6>悪い</h6>\n                        <h6>良い</h6>\n                    </div>\n                    <ReactStarsRating \n                        {...props.elementConfig}\n                        value={props.value}\n                        onChange={(val) => props.changed({target: {value: val}})}/>\n                </div>\n            break;\n        case ('label'):\n            inputElem = <div className={classes.LabelElement}>\n                <h3>{props.value}</h3>\n                </div>\n            break;\n        case ('dropzone'):\n            inputElem = <DropzoneArea\n                            {...props.elementConfig}\n                            onChange={props.changed}\n                            />\n            break;\n        default:\n            inputElem = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            \n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElem}\n        </div>\n    )\n}\n\nexport default input;","import React, {useState} from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\nimport Input from '../../UI/Input/Input';\n\nconst NavigationItems = props => {\n    const [text, setText] = useState(\"\");\n\n    return (<ul className={classes.NavigationItems}>\n        <Input\n            key={1}\n            elementType=\"text\"\n            elementConfig={{\n                placeholder: \"食品名を入力\"\n            }}\n            value={text}\n            invalid={true}\n            shouldValidate={false}\n            touched={true}\n            changed={(event) => setText(event.target.value.trim())}/>\n        <NavigationItem link={{pathname: \"/\", extraProps: {query: text}}} exact clicked={() => props.addSearchQuery(text)}>検索</NavigationItem>\n        <NavigationItem link=\"/newpost\" exact>新規投稿</NavigationItem>\n        {props.isAuthenticate ? \n            <NavigationItem link=\"/mypage\" exact>マイページ</NavigationItem>:\n            null}\n        {props.isAuthenticate ? \n            <NavigationItem link=\"/logout\" exact>ログアウト</NavigationItem>:\n            <NavigationItem link=\"/auth\" exact>ログイン</NavigationItem>}\n    </ul>);\n}\n\nexport default NavigationItems;","import React from 'react';\n\nimport classes from './Toolbar.module.css';\n\nimport Logo from '../../Logo/Logo';\nimport DrawToggle from '../DrawToggle/DrawToggle';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nconst toolbar = props => (\n    <header className={classes.Toolbar}>\n        <DrawToggle clicked={props.drawToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems\n                addSearchQuery={(query) => props.addSearchQuery(query)}\n                isAuthenticate={props.isAuthenticate}/>\n        </nav>\n    </header>\n)\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './BackDrop.module.css';\n\nconst backdrop = props => (\n    props.show ? <div className={classes.BackDrop} onClick={props.clicked} ></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Modal/BackDrop/BackDrop';\nimport Aux from '../../../hoc/Auxirialy';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems\n                        addSearchQuery={(query) => props.addSearchQuery(query)}\n                        isAuthenticate={props.isAuthenticate} />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport * as actionTypes from '../../store/actions/index';\nimport Aux from '../Auxirialy';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport classes from './Layout.module.css';\nimport {getLocalStorage} from '../../common/crypto';\n\nclass Layout extends Component {\n    state ={ \n        showSideDrawer: false,\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n    render() {\n        return (\n            <Aux>\n                <Toolbar\n                    drawToggleClicked={this.sideDrawerToggleHandler}\n                    isAuthenticate={this.props.isAuthenticate}\n                    addSearchQuery={(query) => this.props.addSearchQuery(query)}/>\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler}\n                    isAuthenticate={this.props.isAuthenticate}\n                    addSearchQuery={(query) => this.props.addSearchQuery(query)}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticate: getLocalStorage(\"token\") != null || state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addSearchQuery: (query) => dispatch(actionTypes.addSearchQuery(query)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst button = props => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import * as CommonConst from './commonConst';\n\nexport const checkValidity = ( value, rules ) => {\n    \n    let isValid = true;\n    if ( !rules ) {\n        return true;\n    }\n\n    if ( rules.required ) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if ( rules.minLength ) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if ( rules.maxLength ) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if ( rules.isEmail ) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test( value ) && isValid\n    }\n\n    if ( rules.isNumeric ) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test( value ) && isValid\n    }\n\n    return isValid;\n}\n\nexport const getDateFromString = (dt, userId, type) => {\n    const y = dt.getFullYear();\n    const m = (\"00\" + (dt.getMonth()+1)).slice(-2);\n    const d = (\"00\" + (dt.getDate())).slice(-2);\n    const h = (\"00\" + dt.getHours()).slice(-2);\n    const M = (\"00\" + dt.getMinutes()).slice(-2);\n    const s = (\"00\" + dt.getSeconds()).slice(-2);\n    const ms = dt.getSeconds();\n    switch(type) {\n        case CommonConst.POST_ID:\n            return (\"P\" + userId + y + m + d + h + M + s + ms)\n        case CommonConst.RES_ID:\n            return (\"R\" + userId + y + m + d + h + M + s + ms)\n        default:\n            return (\"W\" + userId + y + m + d + h + M + s + ms)\n    }\n}\n\nexport const getDateYYYYMMDD = (dt) => {\n    const y = dt.getFullYear();\n    const m = (\"00\" + (dt.getMonth()+1)).slice(-2);\n    const d = (\"00\" + (dt.getDate())).slice(-2);\n    return (y + \"/\" + m + \"/\" + d)\n}\n\nexport const getValFromList = (value, valList) => {\n    for (let key in valList) {\n        if (valList[key].value == value){ \n            return valList[key].displayValue\n        }\n    }\n    return null;\n}","import {getValFromList} from './utility';\n\nexport const sexList = [\n    {value: 0, displayValue: \"不明\"},\n    {value: 1, displayValue: \"男性\"},\n    {value: 2, displayValue: \"女性\"},\n];\n\nexport const getSex = (value) => {\n    return getValFromList(value, sexList);\n};\n\nexport const ageList = [...Array(100)].map((_, i) => {\n    return {\n        value: (new Date().getFullYear() - 100) + i,\n        displayValue: (new Date().getFullYear() - 100) + i\n    }\n});\n\nexport const getAge = (value) => {\n        if (15 >= value) return \"10代前半\";\n        else if(25 >= value) return \"20代前半\";\n        else if(30 >  value) return \"20代後半\";\n        else if(35 >= value) return \"30代前半\";\n        else if(40 >  value) return \"30代後半\";\n        else if(45 >= value) return \"40代前半\";\n        else if(50 >  value) return \"40代後半\";\n        else if(55 >= value) return \"50代前半\";\n        else if(60 >  value) return \"50代後半\";\n        else if(65 >= value) return \"60代前半\";\n        else if(70 >  value) return \"60代後半\";\n        else if(75 >= value) return \"70代前半\";\n        else if(80 >  value) return \"70代後半\";\n        else if(85 >= value) return \"80代前半\";\n        else if(90 >  value) return \"80代後半\";\n};\n","import React from 'react';\nimport Aux from '../../../hoc/Auxirialy';\nimport BackDrop from './BackDrop/BackDrop';\n\nimport classes from './Modal.module.css';\n\nconst Modal = props => {\n    return (\n        <Aux>\n            <BackDrop show={props.show} clicked={props.clicked} />\n            <div\n                className={classes.Modal}\n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1' : '0'\n                }}>\n                    {props.children}\n                </div>\n        </Aux>\n\n    )\n};\n\nexport default Modal;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport {getSex} from '../../common/authConst'\nimport * as actions from '../../store/actions/index'\nimport {getLocalStorage} from '../../common/crypto';\n\nimport classes from './MyPage.module.css';\nimport Modal from '../../components/UI/Modal/Modal';\n\nclass MyPage extends Component {\n    state = {\n        form: {\n            username: {\n                value: getLocalStorage(\"username\"), elementType: \"label\", writable:false, label: \"名前\", changeable:true,\n            },\n            email: {\n                value: getLocalStorage(\"email\"), elementType: \"label\", writable:false, label: \"メールアドレス\", changeable:true,\n            },\n            sex: {\n                value: getSex(getLocalStorage(\"sex\")), elementType: \"label\", writable:false, label: \"性別\", changeable:false,\n            },\n            birthday: {\n                value: getLocalStorage(\"birthday\"), elementType: \"label\", writable:false, label: \"誕生年\", changeable:false,\n            }\n        },\n        modalShow: false,\n        password: \"\",\n    }\n\n    profileChangeHandler = (event, id) => {\n        const updateFormValue = {\n            ...this.state.form,\n            [id]: {...this.state.form[id], value: event.target.value}\n        }\n        this.setState({form: updateFormValue});\n    };\n\n    // 変数をオブジェクトのキーに使用する場合、[]で囲う必要あり\n    // 例） id: \"hoge\" => [id]: \"hobe\"\n    profileTypeSwitchHandler = (id) => {\n        const updateFormValue = {\n            ...this.state.form,\n            [id]: {...this.state.form[id], writable: !this.state.form[id].writable, elementType: this.state.form[id].elementType==\"label\" ? \"input\" : \"label\"} \n        }\n        this.setState({form: updateFormValue});\n    }\n\n    profileSubmitHandler = () => {\n        this.setState({modalShow: true});\n    }\n\n    modalSubmitHandler = (username, email, password) => {\n        this.props.profileUpdate(username, email, password);\n        this.setState({modalShow: false});\n    }\n\n    render() {\n        const profileArray = [];\n        for (let key in this.state.form) {\n            profileArray.push({\n                id: key,\n                content: this.state.form[key]\n            });\n        };\n        const passCofirm = (\n                    <div className={classes.PassConfirm}>\n                        <Input\n                            key={1}\n                            value={this.state.password}\n                            label=\"パスワード\"\n                            elementType=\"input\"\n                            elementConfig={{type: \"password\"}}\n                            changed={(event) => this.setState({password: event.target.value})}/>\n                        <Button btnType=\"Success\" clicked={() => this.modalSubmitHandler(this.state.form.username.value, this.state.form.email.value, this.state.password)}>送信</Button>\n                    </div>\n        )\n\n        // list の key は最上位のコンポーネントに設定する事\n        let profiles = (\n            <div>\n                {profileArray.map(profile => (\n                    <div key={profile.id} className={classes.InputElement}>\n                        <Input\n                            id={profile.id}\n                            value={profile.content.value}\n                            label={profile.content.label}\n                            elementType={profile.content.elementType}\n                            changed={(event) => this.profileChangeHandler(event, profile.id)}/>\n                        {profile.content.changeable\n                            ? <Button btnType=\"Success\" clicked={() => this.profileTypeSwitchHandler(profile.id)}>{profile.content.writable ? \"決定\" : \"変更\"}</Button>\n                            : null}\n                    </div>\n                    ))}\n            </div>\n        );\n\n        // return は <div>で囲う必要あり\n        return (\n            <div className={classes.MyPage}>\n                <h1 style={{textAlign: \"center\"}}>PROFILE</h1>\n                <Modal\n                    show={this.state.modalShow}\n                    clicked={() => this.setState({modalShow : !this.state.modalShow})}>\n                        {passCofirm}\n                </Modal>\n                {profiles}\n                <Button \n                    btnType=\"Danger\"\n                    clicked={() => this.profileSubmitHandler()}>SUBMIT</Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticate: getLocalStorage(\"token\") != null || state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        profileUpdate: (username, email, password) => dispatch(actions.profileUpdate(username, email, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPage);","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './NewPost.module.css';\n\nimport * as actions from '../../store/actions/index';\n\nclass newPost extends Component {\n    state = {\n        postForm: {\n            // タイトル\n            title: {\n                key: \"title\",\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"例）椎茸、豚肉\"\n                },\n                value: \"\",\n                label: \"食品名\",\n                touched: false,\n                valid: true,  //現時点では表面上チェックする項目はなし\n            },\n            describe: {\n                key: \"describe\",\n                elementType: \"textarea\",\n                elementConfig: {\n                },\n                value: \"\",\n                label: \"説明\",\n                touched: true, //現時点では表面上チェックする項目はなし\n                valid: true,  //現時点では表面上チェックする項目はなし\n            },\n            image: {\n                key: \"image\",\n                elementType: \"dropzone\",\n                elementConfig: {\n                    acceptedFiles: [\"image/png\",\"image/jpeg\"],\n                    filesLimit: 1,\n                    showPreviews: true,\n                },\n                value: null,\n                label: \"イメージ画像\",\n                touched: true, //現時点では表面上チェックする項目はなし\n                valid: true,  //現時点では表面上チェックする項目はなし\n            }\n        },\n        images: null,\n    }\n\n    inputChangeHandler = (event, postFormId) => {\n        let newValue = null\n        if (postFormId == \"image\") {\n            newValue = event;\n        }else {\n            newValue = event.target.value;\n            \n        }\n        const newState = {...this.state.postForm[postFormId], value: newValue, touched: true};\n        this.setState({\n            postForm: {...this.state.postForm, [postFormId]: newState},\n        });\n    };\n\n    onSubmitHandler = () => {\n        const result = {}\n        for (let key in this.state.postForm) {\n            result[key] = this.state.postForm[key].value\n        }\n        console.log(result);\n        this.props.onAddPost(result);\n        this.setState({\n            postForm: {\n                title: {...this.state.postForm.title, value: \"\", touched: false},\n                describe: {...this.state.postForm.describe, value: \"\", touched: false},\n                image: {...this.state.postForm.image, value: null, touched: true},\n            },\n        })\n    }\n\n    render() {\n        const postArr = [];\n        for (let key in this.state.postForm) {\n            postArr.push({\n                id: key,\n                contents: this.state.postForm[key],\n            })\n        }\n\n        const posts = postArr.map(e =>\n            (<Input \n                elementType={e.contents.elementType}\n                elementConfig={e.contents.elementConfig}\n                value={e.contents.value}\n                label={e.contents.label}\n                touched={e.contents.touched}\n                changed={(event) => this.inputChangeHandler(event, e.id)}\n            />)\n        )\n        return (\n            <div className={classes.NewPost}>\n                {posts}\n                <Button\n                    clicked={this.onSubmitHandler}\n                    btnType={this.state.postForm.title.touched ? \"Success\" : \"Danger\"}\n                    disabled={!this.state.postForm.title.touched}\n                    >確認</Button>\n            </div>\n        )\n    }\n};\n\n//TODO 全ポストを表示する必要がなくなったら削除してOK\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts.posts\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAddPost: (post) => dispatch(actions.addPost(post))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(newPost);","import React, { useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {NavLink} from 'react-router-dom'\n\nimport * as actions from '../../store/actions/index'\n\nimport classes from './Post.module.css';\n\nconst Posts = props => {\n\n    useEffect(() => {\n        props.fetchPost(props.query);\n          \n    },[props.query])\n    \n    const posts = props.posts.map((e, index) => {\n        return(\n        <NavLink className={classes.Contents} key={e.id} to={{\n            pathname:\"/posts/\" + e.id,\n            extraProps: {\n                index: index\n            }\n            }}>\n            <i className=\"fas fa-drumstick-bite fa-2x\"></i>\n            <h3>{e.title}  ({typeof e.response == \"undefined\" ? 0 : e.response.length})</h3>\n        </NavLink>)\n    })\n \n    return (\n        <div className={classes.Posts}>\n            <div className={classes.PostsNotice}>\n                <h2>※ 注意 ※</h2>\n                <h5>・当ウェブサイトは賞味期限切れ／消費期限切れの食べ物を食べた後の健康状態に何らの責任を追うものではありません<br/>\n                    ・また、当ウェブサイト、またはコンテンツのご利用により、万一、\n                ご利用者様に何らかの不都合や損害が発生したとしても、\n                当ウェブサイトは何らの責任を負うものではありません。</h5>            \n            </div>\n            {posts}\n        </div>\n    );\n}\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts.posts,\n        response: state.posts.response,\n        query: state.posts.query,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchPost: (query) => dispatch(actions.fetchPost(query))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nimport {ageList, sexList} from '../../common/authConst';\nimport {checkValidity} from '../../common/utility';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\n\n\nimport classes from './Auth.module.css';\n\nclass Auth extends Component {\n\n    state ={\n        formElement: {\n            name: {\n                elementType: \"input\",\n                elementConfig: {\n                    placeholder: \"名前\"\n                },\n                value: \"\",\n                valid: true,\n                touched: false,\n                label: \"名前\",\n                onlySignUp: true,\n            },\n            email: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"email\",\n                    placeholder: \"メールアドレス\"\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false,\n                label: \"メールアドレス\",\n                onlySignUp: false,\n            },\n            password: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"password\",\n                    placeholder: \"6文字以上\"\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false,\n                label: \"パスワード\",\n                onlySignUp: false,\n            },\n            password2: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"password\",\n                    placeholder: \"6文字以上\"\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false,\n                label: \"パスワード(確認用)\",\n                onlySignUp: true,\n            },\n            sex: {\n                elementType: \"select\",\n                elementConfig: {\n                    options: sexList\n                },\n                value: sexList[0],\n                valid: true,\n                touched: true,\n                label: \"性別\",\n                onlySignUp: true,\n            },\n            birhday: {\n                elementType: \"select\",\n                elementConfig: {\n                    options: ageList\n                },\n                value: new Date().getFullYear() - 35,\n                validation: {},\n                valid: true,\n                touched: true,\n                label: \"誕生年\",\n                onlySignUp: true,\n            },\n        },\n        valid: false,\n        isSignUp: false,\n    }\n\n    inputChangeHandler = (event, formName) => {\n        const updateObject = {...this.state.formElement, \n            [formName]: {\n                ...this.state.formElement[formName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.formElement[formName].validation),\n                touched: true,\n            }\n        };\n        this.setState({formElement: updateObject});\n\n        // フォームの送信可否を判断する\n        for (let key in updateObject) {\n            // ログインの場合\n            if (!this.state.isSignUp && updateObject[key].onlySignUp) continue;\n\n            const elem = updateObject[key];\n            if (!elem.valid || !elem.touched) {\n                this.setState({valid: false});\n                return;\n            } \n        }\n        this.setState({valid: true});\n    }\n\n    /**\n     * 新規登録またはログインボタン押下\n     */\n    onSubmitHandler = () => {\n\n        console.log(\"onsubmithandler is called\");\n\n        if (this.state.isSignUp && this.state.formElement.password.value != this.state.formElement.password2.value) {\n            alert(\"パスワードが一致しません。\");\n            return;\n        }\n\n        const userInfo = {\n            username: this.state.formElement.name.value,\n            email: this.state.formElement.email.value,\n            password: this.state.formElement.password.value,\n            password2: this.state.formElement.password2.value,\n            sex: this.state.formElement.sex.value,\n            birthday: this.state.formElement.birhday.value,\n        }\n\n        // ログインor新規登録を行う\n        this.props.auth(userInfo, this.state.isSignUp)\n    }\n\n    componentDidMount() {\n        // エラー表示をした後は、保持しているエラー情報を削除\n        if(this.props.error) {\n            this.props.authErrorReset();\n        }\n    }\n\n    created = () => {\n        this.setState({isSignUp: false});\n        this.props.authCreateSuccessEnd();\n    }\n\n    render() {\n        // ログイン済みの場合、本画面に遷移\n        let authRedirect = null;\n        if (this.props.isAuthenticate) {\n            authRedirect = <Redirect to={this.props.redirectPath} />\n        }\n        if (this.props.created) {\n            this.created();\n        }\n\n        // エラーがあれば、エラー表示\n        let errorMessage = null;\n        if(this.props.error) {\n            errorMessage = (<p style={{color: \"red\"}}>{this.props.error}</p>);\n        }\n\n        const authArr = [];\n        for (let key in this.state.formElement) {\n            // 新規登録でのみ使用するインプット要素は削除する\n            if (this.state.formElement[key].onlySignUp && !this.state.isSignUp) continue;\n            authArr.push({\n                id: key,\n                config: this.state.formElement[key]\n            })\n        }\n\n        let contents = authArr.map(e =>　{\n            return(<Input\n                key={e.id}\n                elementType={e.config.elementType}\n                elementConfig={e.config.elementConfig}\n                value={e.config.value}\n                invalid={e.config.valid}\n                shouldValidate={e.config.validation}\n                touched={e.config.touched}\n                changed={(event) => this.inputChangeHandler(event, e.id)}\n                label={e.config.label}/>)}\n        );\n\n        // ロード中であればスピナーを表示\n        if (this.props.loading) {\n            contents = <Spinner />\n        }\n\n        return(\n            <div className={classes.Auth}>\n                {errorMessage}\n                {authRedirect}\n                {contents}\n                <Button\n                    btnType=\"Success\"\n                    disabled={!this.state.valid}\n                    clicked={()=>this.onSubmitHandler()} >{this.state.isSignUp ? \"新規登録\" : \"ログイン\"}</Button>\n                <Button\n                    btnType=\"Danger\"\n                    clicked={() => this.setState({isSignUp: !this.state.isSignUp})}\n                    >{this.state.isSignUp ? \"ログインへ切替\" : \"新規登録へ切替\"}</Button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        userInfo: state.auth.userInfo,\n        loading: state.auth.loading,\n        error: state.auth.error,\n        redirectPath: state.auth.authRedirectPath,\n        isAuthenticate: state.auth.token !== null,\n        created: state.auth.created,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        auth: (userInfo, isSignUp) => dispatch(actions.auth(userInfo, isSignUp)),\n        authErrorReset: () => dispatch(actions.authErrorReset()),\n        authCreateSuccessEnd: () => dispatch(actions.authCreateSuccessEnd()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","export const expiredDateSelectList = [\n    {value: 1, displayValue: \"1日\"},\n    {value: 2, displayValue: \"2日\"},\n    {value: 3, displayValue: \"3日\"},\n    {value: 5, displayValue: \"4,5日\"},\n    {value: 11, displayValue: \"1~2週間\"},\n    {value: 12, displayValue: \"2~3週間\"},\n    {value: 13, displayValue: \"3~4週間\"},\n    {value: 21, displayValue: \"1~3ヶ月\"},\n    {value: 23, displayValue: \"3~6ヶ月\"},\n    {value: 26, displayValue: \"6~9ヶ月\"},\n    {value: 29, displayValue: \"9~12ヶ月\"},\n    {value: 31, displayValue: \"1~2年\"},\n    {value: 32, displayValue: \"2~3年\"},\n    {value: 33, displayValue: \"3~5年\"},\n    {value: 35, displayValue: \"5~10年\"},\n    {value: 39, displayValue: \"10年~\"},\n];\n\n/**\n * 期限切れ後期間リストから値に相当する表示用値を取得する\n * @param {*} value \n */\nexport const getExpiredDateFromSelectVal = (value) => {\n    for(let key in expiredDateSelectList) {\n        if(expiredDateSelectList[key].value == value) {\n            return expiredDateSelectList[key].displayValue;\n        }\n    }\n    return null;\n }","import React, { useState } from 'react';\n\nimport {checkValidity} from '../../../common/utility';\nimport * as formConst from '../../../common/formConst';\nimport Input from '../../../components/UI/Input/Input';\nimport Button from '../../../components/UI/Button/Button';\n\n\nimport classes from './ResponseForm.module.css';\n\nconst ResponseForm = props => {\n    const [inputElements, setinputElements] = useState({\n        //賞味期限切れ後の経過日数\n        expiredDays: {\n            elementType: 'select', // htmlに表示する際のタグ\n            elementConfig: { // タグ内に記載する要素\n                boxSizeMiddle: true,\n                options: formConst.expiredDateSelectList,\n            },\n            value: 1, // 表示する初期値\n            validation: {\n            },\n            valid: false, // 検査の結果有効か否か\n            touched:false,\n            label: \"賞味期限切れ後の経過日数\"}, // タッチ済みかどうか\n        taste: {\n                elementType: 'starrating', // htmlに表示する際のタグ\n                elementConfig: { // タグ内に記載する要素\n                    size: 30,\n                    isHalf: false\n                },\n                value: 1, // 表示する初期値\n                validation: {},\n                valid: false, // 検査の結果有効か否か\n                touched:false,\n                label: \"味\"}, // タッチ済みかどうか\n        appearance: {\n                elementType: 'starrating', // htmlに表示する際のタグ\n                elementConfig: { // タグ内に記載する要素\n                    size: 30,\n                    isHalf: false\n                },\n                value: 1, // 表示する初期値\n                validation: {},\n                valid: false, // 検査の結果有効か否か\n                touched:false,\n                label: \"見た目\"}, // タッチ済みかどうか\n        condition: {\n                elementType: 'starrating', // htmlに表示する際のタグ\n                elementConfig: { // タグ内に記載する要素\n                    size: 30,\n                    isHalf: false\n                },\n                value: 1, // 表示する初期値\n                validation: {},\n                valid: false, // 検査の結果有効か否か\n                touched:false,\n                label: \"食後の体調\"}, // タッチ済みかどうか\n        comment: {\n            elementType: \"textarea\",\n            elementConfig: {\n                text: 'text',\n                placeholder: \"例) 見た目は悪かったが、食後の体調は良好...\"\n            },\n            value: '',\n            validation: {},\n            valid: false,\n            touched:false,\n            label: \"コメント\"},\n    })\n    \n    const onChangeHandler = (event, inputIdentifier) => {\n        // 数字全角を半角に修正\n        let newValue = event.target.value;\n        if (inputIdentifier == \"expiredDays\") {\n            newValue = event.target.value.replace(/[０-９]/g, (input) => String.fromCharCode(input.charCodeAt(0)-0xFEE0))\n        }\n        const newElement = {...inputElements[inputIdentifier],\n            value: newValue,\n            valid: checkValidity(newValue, inputElements[inputIdentifier].validation),\n            touched: true};\n        setinputElements({...inputElements, [inputIdentifier]: newElement});\n    };\n\n    const onSubmitHandler = () => {\n        const newRes = {\n            expiredDays: inputElements[\"expiredDays\"].value,\n            appearance: inputElements[\"appearance\"].value,\n            taste: inputElements[\"taste\"].value,\n            condition: inputElements[\"condition\"].value,\n            comment: inputElements[\"comment\"].value,\n        }\n        props.submitted(newRes);\n\n        // フォームを初期化する\n        const newIptElm = {}\n        for (let key in inputElements) {\n            switch(inputElements[key].elementType) {\n                case \"starrating\":\n                case \"select\":\n                    newIptElm[key] = {...inputElements[key], value: 1};\n                    break;\n                default:\n                    newIptElm[key] = {...inputElements[key], value: ''}\n            }\n        }\n        setinputElements(newIptElm);\n\n        // モーダルを閉じる\n        props.modalClosed();\n    }\n\n    // フォーム表示用のオブジェクトを配列に変換\n    const iptElmArr = [];\n    for (let key in inputElements) {\n        iptElmArr.push({\n            id: key,\n            config: inputElements[key]\n        })\n    }\n\n    return (\n    <div className={classes.ResponseForm}>\n        {iptElmArr.map(e => (\n            <Input \n                key={e.id} \n                elementType={e.config.elementType}\n                elementConfig={e.config.elementConfig}\n                value={e.config.value}\n                invalid={!e.config.valid}\n                changed={(event) => onChangeHandler(event, e.id)}\n                touched={e.config.touched}\n                validation={e.config.validation}\n                label={e.config.label}\n            />\n        ))}\n        <Button \n            clicked={() => onSubmitHandler()}\n            btnType={inputElements[\"expiredDays\"].valid ? \"Success\" : \"Danger\"}\n            disabled={!inputElements[\"expiredDays\"].valid}\n            >送信</Button>\n    </div>)\n}\n\nexport default ResponseForm;","import React, {Component} from 'react';\n\nimport {getExpiredDateFromSelectVal} from '../../../common/formConst'\nimport {getDateYYYYMMDD} from '../../../common/utility'\nimport {getAge, getSex} from '../../../common/authConst';\nimport classes from './ResponseDetails.module.css';\n\nclass ResponseDetails extends Component {\n    \n    starConvert = (count) => [...Array(5).keys()].map(e => {\n        return count <= e ? (<svg\n                key={e}\n                width=\"20\"\n                viewBox=\"0 0 306 306\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                data-stars=\"4\">\n                    <polygon\n                        fill=\"url(#noneId-1611286908113)\"\n                        points=\"153,230.775 247.35,299.625 211.65,187.425 306,121.125 191.25,121.125 153,6.375 114.75,121.125 0,121.125  94.35,187.425 58.65,299.625\"\n                        pointerEvents=\"none\"></polygon>\n                </svg>)\n            :\n            (<svg\n                key={e}\n                width=\"20\"\n                viewBox=\"0 0 306 306\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                data-stars=\"1\">\n                    <defs>\n                        <linearGradient id=\"fullId-1611286908113\">\n                            <stop offset=\"100%\" stopColor=\"orange\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"noneId-1611286908113\">\n                            <stop offset=\"100%\" stopColor=\"grey\"></stop>\n                        </linearGradient>\n                        <linearGradient id=\"halfId-1611286908113\">\n                            <stop offset=\"0%\" stopColor=\"orange\"></stop>\n                            <stop offset=\"0%\" stopColor=\"grey\"></stop>\n                        </linearGradient>\n                    </defs>\n                    <polygon\n                        fill=\"url(#fullId-1611286908113)\"\n                        points=\"153,230.775 247.35,299.625 211.65,187.425 306,121.125 191.25,121.125 153,6.375 114.75,121.125 0,121.125  94.35,187.425 58.65,299.625\"\n                        pointerEvents=\"none\">\n                    </polygon>\n                </svg>)\n    });\n\n    render() {\n        return (\n        <div className={classes.Response}>\n            <div className={classes.Profile}>\n                <h5><i className=\"fas fa-user-alt\"></i>{getAge(this.props.userResponse.age)} {getSex(this.props.userResponse.sex)}</h5>\n                <h5>投稿日時  :{getDateYYYYMMDD(new Date(this.props.userResponse.created_at))}</h5>\n            </div>\n            <div className={classes.Evaluates}>\n                <div><h4>期限切れ後 <span style={{color:\"red\"}}>{getExpiredDateFromSelectVal(this.props.userResponse.expire_date)}</span></h4></div>\n                <div className={classes.Evaluate}><h4>見た目:</h4><span>{this.starConvert(this.props.userResponse.appearance)}</span></div>\n                <div className={classes.Evaluate}><h4>味:</h4><span>{this.starConvert(this.props.userResponse.taste)}</span></div>\n                <div className={classes.Evaluate}><h4>体調:</h4><span>{this.starConvert(this.props.userResponse.condition)}</span></div>\n            </div>\n            <div className={classes.Other}>\n                <div className={classes.OtherElem}><h4>コメント :{this.props.userResponse.comment}</h4></div>\n                <div className={classes.OtherElem}>\n                    <h4>参考になった : {this.props.userResponse.goodClickUser.length}</h4>\n                    <i onClick={() => {this.props.onClickGood(this.props.userResponse.id, this.props.responseIndex)}} style={{cursor: \"pointer\"}} className=\"far fa-thumbs-up\"></i>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default ResponseDetails;","import {BarChart, Bar, XAxis, YAxis, Legend, Tooltip, CartesianGrid, ResponsiveContainer, Brush} from 'recharts';\n\nimport classes from './Chart.module.css'\n\n/**\n * カーソルフォーカス時に詳細説明を表示する。\n * @param {}} param0 \n */\nconst CustomToolTip = ({active, payload, label}) => {\n    if (active) {\n        let {taste, appearance, condition} = \"\";\n        if(payload) {\n            taste = payload[0].value\n            appearance = payload[1].value\n            condition = payload[2].value\n        }\n        return (\n          <div className={classes.CustomToolTip}>\n            <h5 className=\"label\">{`${label}日経過`}</h5>\n            <h5 className=\"label\">{`味：${taste}`}</h5>\n            <h5 className=\"label\">{`見た目：${appearance}`}</h5>\n            <h5 className=\"label\">{`食後の健康：${condition}`}</h5>\n          </div>\n        );\n    }\n    return null;\n\n    }\n\nconst renderLineChart = props => {\n    return(\n        <ResponsiveContainer width=\"90%\" height={200}>\n            <BarChart data={props.data} margin={{top: 0, right:5, bottom:5, left:0}} barSize={10}>\n                {/* 純粋なライン */}\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\"/>\n                {/* X座標 Y座標 */}\n                <XAxis dataKey=\"name\" name=\"expire_date\" unit=\"日\"/>\n                <YAxis ticks={[1,2,3,4,5]} tickCount={0.5}/>\n                {/* マウスオーバーで補足説明 */}\n                <Tooltip content={<CustomToolTip />}/>\n                {/* 凡例 */}\n                <Legend width=\"inherit\"/>\n                {/* 表示範囲の調整 */}\n                <Brush dataKey=\"name\" height={20} endIndex={6}/>\n                {/* バー */}\n                <Bar dataKey='taste' name=\"味\" fill=\"#FFC107\" />\n                <Bar dataKey='appearance' name=\"見た目\" fill=\"#40C4FF\" />\n                <Bar dataKey='condition' name=\"食後の健康\" fill=\"#C2185B\" />\n                \n            </BarChart>\n        </ResponsiveContainer>\n);\n}\nexport default renderLineChart;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport ResponseForm from './ResponseForm/ReponseForm';\nimport ResponseDetails from './ResponseDetails/ResponseDetails';\nimport LineChart from './Chart/Chart';\nimport * as actions from '../../store/actions/index';\n\nimport classes from './PostDetails.module.css';\n\nconst ImageComponent = (props) => (\n    <img src={props.img}\n        alt={\"img\"}\n        style={{\n            height: \"52px\",\n            width: \"80px\",\n            borderRadius: \"10px\",\n            margin: \"3px 0\",\n        }}/>);\n\nclass PostDetails extends Component {\n\n    state = {\n        show: false,\n        postId: this.props.match.params.postId,\n    }\n\n    componentDidMount() {\n\n        // グラフデータを取得する\n        const post = this.props.match.params.postId;\n        if (typeof post == \"undefined\") {\n            this.props.fetchPost();\n        }else {\n            this.props.fetchGraphData(post);\n\n        }\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        \n        // 平均値を算出する ⇒ reduxで管理するようになったら不要\n    }\n    \n    // ポストに対する反応を投稿\n    onAddResHandler = (responseInfo, post) => {\n        this.props.onAddNewRes(responseInfo, post.id, this.props.location.extraProps.index);\n    }\n\n    render() {\n\n        // GETで取得したポストIDに紐づく投稿を取得する\n        const postid = this.props.match.params.postId;\n        const post = this.props.posts.filter(e => e.id == postid)[0];\n\n        // redux で取得したレスポンスを元にレスポンスコンポーネントを作成する\n        let res = null;\n        let postRedirect = null;\n        let foodImage = null;\n        let foodDescribe = null;\n        if (typeof post !== 'undefined') {\n            res = post.response.map((currentRes, index) => {\n                return (<ResponseDetails\n                            key={index}\n                            responseIndex={index}\n                            userResponse={currentRes}\n                            onClickGood={(response, responseIndex) => this.props.onAddGodClk(response, this.props.location.extraProps.index, responseIndex)}/>)\n            });\n            foodImage = post.food_image ? <ImageComponent img={process.env.REACT_APP_END_POINT+post.food_image}/> : null;\n            foodDescribe = post.describe ? <h5>※ {post.describe}</h5> : null;\n        }else {\n            postRedirect = <Redirect to=\"/\" />\n        }\n\n        /**\n         * レスポンスボタンを付ける\n         * レスポンスフォームのモーダルを作成する\n         */\n\n        return (\n            \n            <div className={classes.PostDetailsCommon}>\n                {postRedirect}\n                <div className={classes.Header}>\n\n                    <Modal show={this.state.show} clicked={() => this.setState({show: !this.state.show})}>\n                        <ResponseForm \n                            postId={this.state.postId}\n                            submitted={(responseInfo) => this.onAddResHandler(responseInfo, post)}\n                            modalClosed={() => this.setState({show: !this.state.show})}/>\n                    </Modal>\n                    <div className={classes.PostDetails}>\n                        <div className={classes.PostDetailsHeader}>\n                            <div className={classes.PostDetailsTitle}>\n                                <i className=\"fas fa-drumstick-bite fa-3x\"></i>\n                                <h1>{post ? post.title : null}</h1>\n                                {foodDescribe}\n                            </div>\n                            {foodImage}\n                        </div>\n                        <div className={classes.PostDetailsDescribe}>\n                           <div className={classes.PostDetailsSummary}>\n                                <div><h4>■評価</h4></div>\n                                <div className={classes.PostDetailsSummaryPraph}>\n                                    <LineChart data={this.props.graphData}></LineChart>\n                                    {/* <h3>見た目：{this.state.average.appearance}</h3>\n                                    <h3>味：{this.state.average.taste}</h3>\n                                <h3>体調：{this.state.average.condition}</h3> */}\n                                </div>\n                                <div><h5>評価：5 問題なし　←－－－→　1 最悪 ※ 0:データなし</h5></div>\n                           </div>\n                        </div>\n                    </div>\n                    <div className={classes.PostHeader}>\n                        <i className=\"fas fa-users fa-3x\"></i>\n                        <h1 style={{margin: \"0 0 0 10px\"}}>みんなの投稿</h1>\n                        {this.props.isAuthenticate ?\n                            <div className={classes.NewPost} onClick={() => this.setState({show: !this.state.show})}>\n                                    <div className={classes.PlusIcon}><span /></div>\n                                    <h2 className={classes.PostLabel}>新規投稿</h2>\n                            </div> : <h5 style={{margin: \"0 10px 0\"}}>※ ログイン後に投稿お願いします ※</h5>}\n                    </div>\n                </div>\n                <div className={classes.Response}>\n                    {res}\n                </div>\n            </div>\n        );\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts.posts,\n        userInfo: state.auth.userInfo,\n        isAuthenticate: localStorage.getItem(\"token\") != null || state.auth.token !== null,\n        graphData: state.posts.graphData,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddNewRes: (responseInfo, postId, postIndex) => dispatch(actions.addResponse(responseInfo, postId, postIndex)),\n        onAddGodClk: (response, postIndex ,responseIndex) => dispatch(actions.addGoodClick(response, postIndex, responseIndex)),\n        fetchPost: () => dispatch(actions.fetchPost()),\n        fetchGraphData: (postId) => dispatch(actions.fetchGraphData(postId)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetails);","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport MyPage from './containers/MyPage/MyPage';\nimport NewPost from './containers/NewPost/NewPost';\nimport Posts from './containers/Posts/Posts';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport PostDetails from './containers/PostDetails/PostDetails';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          <Route path={\"/mypage\"} component={MyPage} />\n          <Route path={\"/newpost\"} component={NewPost} />\n          <Route path={\"/posts/:postId\"} component={PostDetails} />\n          <Route path={\"/auth\"} component={Auth} />\n          <Route path={\"/logout\"} component={Logout} />\n          <Route path={\"/\"} component={Posts} exact/>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    posts:[],\n    // response: {}\n    graphData: null,\n    query: \"\", // 検索用の文字列\n}\n\n// const state = {\n//     resId: null, //ID\n//     userId: null, //ユーザID\n//     expiredDate: null, //有効期限\n//     duration: null, // 有効期限切れ後N日\n//     opend: null, // 開封済・未済\n//     evaluation: {\n//         appearance: null, //見た目\n//         taste: null, // 味・匂い\n//         physicalCondition: null, // 食後の体調\n//     },\n//     comment: null, //コメント\n//     postDate: null, // 投稿日時\n//     goodCount: 0 // 参考になった数\n// }\n\n/**\n * 新規ポストを追加する\n * @param {*} state \n * @param {*} action \n */\nconst addPostSuccess = (state, action) => {\n    const newArr =state.posts.concat(action.post);\n    return {\n        ...state,\n        posts: newArr\n    }\n}\n\nconst fetchSuccess = (state, action) => {\n    return {\n        ...state,\n        posts: action.posts\n    }\n}\n\nconst fetchDetailSuccess = (state, action) => {\n\n    const updatedPost = state.posts.concat();\n    updatedPost[action.index] = action.post;\n\n    return {\n        ...state,\n        posts: updatedPost,\n    }\n}\n\nconst fetchGraphDataSuccess = (state, action) => {\n    return {\n        ...state,\n        graphData: action.graphData,\n    }\n}\n\n\n/**\n * 各スレッドにユーザーの反応を追加する ★★現在使用していない\n * @param {*} state \n * @param {*} action \n */\nconst addNewResponse = (state, action) => {\n    const newArr = state.response[action.postId].concat({...action.userResponse, id: state.resId});\n    // レスポンスにIDを付与する\n    return {\n        ...state,\n        response: {\n            ...state.response,\n            [action.postId]: newArr},\n        resId: state.resId + 1,\n        }\n}\n\n/**\n * 各スレッドに「参考になった」数を追加する\n * @param {*} state \n * @param {*} action \n */\nconst addGoodClickSuccess = (state, action) => {\n    \n    const updatedPost = state.posts.concat();\n    const updatedResponse = updatedPost[action.postIndex].response;\n    updatedResponse[action.responseIndex].goodClickUser.push(action.goodclickuser);\n    return {\n        ...state,\n        posts: updatedPost,\n    }\n}\n\nconst addSearchQuery = (state, action) => {\n    return {\n        ...state,\n        query: action.query,\n    }\n}\n\nconst reducer = (state=initialState, action) => {\n    switch(action.type) {\n        case actionTypes.FETCH_SUCCESS: return fetchSuccess(state, action)\n        case actionTypes.FETCH_DETAILS_SUCCESS: return fetchDetailSuccess(state, action)\n        case actionTypes.ADD_POST_SUCCESS: return addPostSuccess(state, action);\n        case actionTypes.ADD_GOOD_CLICK_SUCCESS: return addGoodClickSuccess(state, action);\n        case actionTypes.ADD_RESPONSE: return addNewResponse(state, action);\n        case actionTypes.FETCH_GRAPH_DATA_SUCCESS: return fetchGraphDataSuccess(state, action);\n        case actionTypes.ADD_SEARCH_QUERY: return addSearchQuery(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userInfo: {\n        userId: null,\n        username: null,\n        email: null,\n        sex: null,\n        age: null,\n        birthday: null,\n    },\n    error: null,\n    loading: false,\n    authRedirectPath: '/',\n    created: false,\n}\n\nconst authStart = (state, action) => {\n    return {...state, loading: true};\n}\n\nconst authSuccess = (state, action) => {\n\n    console.log(action.userInfo.username);\n    console.log(action.userInfo);\n   \n    const updateState = {...state, \n        userInfo: {\n            userId: action.userInfo.userId,\n            username: action.userInfo.username,\n            email: action.userInfo.email,\n            sex: action.userInfo.sex.value,\n            age: (new Date().getFullYear() - action.userInfo.birthday),\n            birthday: action.userInfo.birthday\n        },\n        loading: false,\n        token: action.token,}\n        \n    return updateState;\n};\n\nconst authCreateSuccess = (state, action) => {\n    return {\n        ...state,\n        created: true,\n    }\n}\n\nconst authCreateSuccessEnd = (state, action) => {\n    return {\n        ...state,\n        created: false,\n    }\n}\n\nconst authFail = (state, action) => {\n    return {...state, error: action.error, loading:false};\n};\n\nconst authLogout = (state, action) => {\n    return {...state,\n        token: null,\n        userInfo: {\n            userId: null,\n            userName: null,\n            email: null,\n            sex: null,\n            age: null,\n            birthday: null,\n        },\n    }\n}\n\nconst authErrorReset = (state, action) => {\n    return {...state,\n        error: null,\n    }\n}\n\nconst profileUpdateSuccess = (state, action) => {\n    console.log(action);\n    return {...state,\n        userInfo: {\n            ...state.userInfo,\n            username: action.userInfo.username,\n            email: action.userInfo.email,\n        }\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_CREATE_SUCCESS: return authCreateSuccess(state, action);\n        case actionTypes.AUTH_CREATE_SUCCESS_END: return authCreateSuccessEnd(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.AUTH_ERROR_REST: return authErrorReset(state, action);\n        case actionTypes.PROFILE_UPDATE_SUCCESS: return profileUpdateSuccess(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport postsReducer from './store/reducers/posts';\nimport authReducer from './store/reducers/auth';\n\nconst rootReducer = combineReducers({\n  posts: postsReducer,\n  auth: authReducer,\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Response\":\"ResponseDetails_Response__24smV\",\"Profile\":\"ResponseDetails_Profile__MVnbD\",\"Evaluates\":\"ResponseDetails_Evaluates__3k0wd\",\"Evaluate\":\"ResponseDetails_Evaluate__j-A9u\",\"Other\":\"ResponseDetails_Other__3HZ8U\",\"OtherElem\":\"ResponseDetails_OtherElem__JGpOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2mUdl\",\"Label\":\"Input_Label__2kUn5\",\"LabelElement\":\"Input_LabelElement__2UnVl\",\"InputElement\":\"Input_InputElement__138DI\",\"Invalid\":\"Input_Invalid__2TFSg\",\"Number\":\"Input_Number__th5ng\",\"SelectMiddle\":\"Input_SelectMiddle__14Dn4\",\"StarRatingEvaluate\":\"Input_StarRatingEvaluate__Q3aLm\"};"],"sourceRoot":""}